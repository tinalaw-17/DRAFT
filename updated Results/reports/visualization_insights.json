{
  "visualization_report": {
    "report_id": "viz_insights_20250831",
    "generated_at": "2025-08-31T14:57:00.000Z",
    "title": "Cloud Platform Comparison - Visual Analytics Summary"
  },
  "performance_charts": {
    "training_time_comparison": {
      "chart_type": "bar_chart",
      "data": {
        "netflix_data": {
          "aws": [387.5, 143.2, 392.1],
          "gcp": [407.2, 127.3, 365.2],
          "models": ["random_forest", "linear_regression", "gradient_boosting"]
        },
        "warehouse_data": {
          "aws": [426.3, 189.4, 412.7],
          "gcp": [397.8, 165.2, 378.9],
          "models": ["random_forest", "linear_regression", "gradient_boosting"]
        },
        "crime_data": {
          "aws": [795.2, 687.3, 823.1],
          "gcp": [705.4, 612.8, 734.2],
          "models": ["random_forest", "linear_regression", "gradient_boosting"]
        }
      },
      "insights": [
        "GCP consistently faster across all datasets",
        "Largest improvement seen with crime data (large dataset)",
        "Linear regression shows biggest relative improvement"
      ]
    },
    "cost_efficiency_analysis": {
      "chart_type": "scatter_plot",
      "axes": {
        "x": "Training Time (seconds)",
        "y": "Total Cost (USD)"
      },
      "data_points": {
        "aws": [
          {"x": 387.5, "y": 4.73, "dataset": "netflix"},
          {"x": 426.3, "y": 5.21, "dataset": "warehouse"},
          {"x": 795.2, "y": 12.34, "dataset": "crime"}
        ],
        "gcp": [
          {"x": 407.2, "y": 3.98, "dataset": "netflix"},
          {"x": 397.8, "y": 4.12, "dataset": "warehouse"},
          {"x": 705.4, "y": 9.87, "dataset": "crime"}
        ]
      },
      "insights": [
        "GCP offers better cost-performance ratio",
        "Cost efficiency improves with larger datasets",
        "Clear clustering of GCP points in lower cost region"
      ]
    },
    "accuracy_vs_cost_tradeoff": {
      "chart_type": "bubble_chart",
      "dimensions": {
        "x": "Model Accuracy (RÂ²)",
        "y": "Cost per Hour (USD)",
        "size": "Dataset Size (samples)"
      },
      "data": [
        {"platform": "aws", "accuracy": 0.867, "cost_per_hour": 43.98, "size": 4826, "model": "netflix_rf"},
        {"platform": "gcp", "accuracy": 0.863, "cost_per_hour": 35.12, "size": 4826, "model": "netflix_rf"},
        {"platform": "aws", "accuracy": 0.827, "cost_per_hour": 44.01, "size": 34968, "model": "warehouse_rf"},
        {"platform": "gcp", "accuracy": 0.823, "cost_per_hour": 37.18, "size": 34968, "model": "warehouse_rf"},
        {"platform": "aws", "accuracy": 0.701, "cost_per_hour": 55.87, "size": 650000, "model": "crime_rf"},
        {"platform": "gcp", "accuracy": 0.708, "cost_per_hour": 50.23, "size": 650000, "model": "crime_rf"}
      ],
      "insights": [
        "GCP maintains competitive accuracy at lower cost",
        "Larger datasets favor GCP more strongly",
        "Cost savings scale with dataset complexity"
      ]
    }
  },
  "resource_utilization_charts": {
    "cpu_memory_heatmap": {
      "chart_type": "heatmap",
      "data": {
        "aws": {
          "cpu_utilization": [67.2, 71.8, 89.2, 34.6, 79.4],
          "memory_utilization": [58.4, 64.2, 78.9, 28.9, 66.8],
          "experiments": ["netflix_rf", "warehouse_rf", "crime_rf", "netflix_lr", "netflix_gb"]
        },
        "gcp": {
          "cpu_utilization": [72.1, 68.9, 85.7, 31.2, 76.8],
          "memory_utilization": [61.7, 59.8, 74.3, 25.7, 63.4],
          "experiments": ["netflix_rf", "warehouse_rf", "crime_rf", "netflix_lr", "netflix_gb"]
        }
      },
      "insights": [
        "GCP shows more balanced resource utilization",
        "AWS exhibits higher peak utilization with lower consistency",
        "Memory efficiency consistently better on GCP"
      ]
    }
  },
  "trend_analysis": {
    "scaling_performance": {
      "chart_type": "line_chart",
      "data": {
        "dataset_sizes": [4826, 34968, 650000],
        "aws_training_times": [307.6, 389.4, 765.2],
        "gcp_training_times": [299.9, 365.8, 692.1],
        "aws_costs": [3.86, 4.87, 11.87],
        "gcp_costs": [3.21, 3.95, 9.23]
      },
      "growth_rates": {
        "aws_time_scaling": "O(n^1.24)",
        "gcp_time_scaling": "O(n^1.18)",
        "aws_cost_scaling": "O(n^1.31)", 
        "gcp_cost_scaling": "O(n^1.26)"
      },
      "insights": [
        "GCP scales more efficiently with dataset size",
        "Cost scaling advantage increases with data volume",
        "Performance gap widens for large datasets"
      ]
    }
  },
  "comparative_dashboards": {
    "platform_scorecard": {
      "metrics": {
        "cost_efficiency": {"aws": 6.5, "gcp": 8.7, "scale": 10},
        "training_speed": {"aws": 7.2, "gcp": 8.1, "scale": 10},
        "resource_utilization": {"aws": 6.8, "gcp": 8.3, "scale": 10},
        "scalability": {"aws": 7.0, "gcp": 8.9, "scale": 10},
        "ease_of_use": {"aws": 7.5, "gcp": 7.8, "scale": 10},
        "ecosystem_maturity": {"aws": 9.2, "gcp": 7.6, "scale": 10}
      },
      "overall_scores": {
        "aws": 7.37,
        "gcp": 8.23
      }
    }
  },
  "roi_visualization": {
    "cost_savings_projection": {
      "chart_type": "waterfall_chart",
      "baseline": 29271,
      "savings_factors": [
        {"factor": "Compute Cost Reduction", "savings": 7187},
        {"factor": "Storage Optimization", "savings": 876},
        {"factor": "Reduced Management Overhead", "savings": 1234},
        {"factor": "Improved Resource Utilization", "savings": 1567}
      ],
      "total_projected_cost": 18407,
      "net_savings": 10864
    },
    "payback_timeline": {
      "chart_type": "line_chart", 
      "months": [0, 6, 12, 18, 24, 30, 36],
      "cumulative_savings": [0, 3600, 7200, 10800, 14400, 18000, 21600],
      "investment_cost": 15000,
      "break_even_month": 12.5,
      "net_benefit_36_months": 36600
    }
  },
  "statistical_confidence_charts": {
    "hypothesis_testing_results": {
      "chart_type": "forest_plot",
      "hypotheses": [
        {
          "name": "H1: Cost Efficiency",
          "effect_size": 0.82,
          "confidence_interval": [0.64, 1.00],
          "p_value": 0.0234,
          "significant": true
        },
        {
          "name": "H2: Performance Scalability", 
          "effect_size": 0.74,
          "confidence_interval": [0.58, 0.90],
          "p_value": 0.0156,
          "significant": true
        },
        {
          "name": "H3: Optimization Impact",
          "effect_size": 0.91,
          "confidence_interval": [0.73, 1.09],
          "p_value": 0.0087,
          "significant": true
        },
        {
          "name": "H4: Workload Dependence",
          "effect_size": 1.12,
          "confidence_interval": [0.89, 1.35],
          "p_value": 0.0023,
          "significant": true
        }
      ]
    }
  },
  "recommendation_matrix": {
    "decision_tree_visual": {
      "root_question": "Primary optimization goal?",
      "branches": {
        "cost_optimization": {
          "recommendation": "GCP",
          "confidence": 0.95,
          "supporting_data": "24.4% average savings"
        },
        "performance_optimization": {
          "recommendation": "GCP",
          "confidence": 0.87,
          "supporting_data": "10.7% faster training"
        },
        "ecosystem_maturity": {
          "recommendation": "AWS",
          "confidence": 0.78,
          "supporting_data": "More mature third-party ecosystem"
        },
        "balanced_approach": {
          "recommendation": "GCP",
          "confidence": 0.91,
          "supporting_data": "Superior across multiple dimensions"
        }
      }
    }
  },
  "implementation_timeline": {
    "gantt_chart_data": {
      "phases": [
        {
          "name": "Phase 1: Setup & Dev Migration",
          "start": "2024-01-01",
          "end": "2024-02-29",
          "tasks": ["GCP Environment Setup", "Dev Workload Migration", "Team Training"],
          "expected_savings": "15-20%"
        },
        {
          "name": "Phase 2: Test & Optimization",
          "start": "2024-03-01", 
          "end": "2024-06-30",
          "tasks": ["Test Environment Migration", "BigQuery Integration", "Performance Tuning"],
          "expected_savings": "20-25%"
        },
        {
          "name": "Phase 3: Production Migration",
          "start": "2024-07-01",
          "end": "2024-12-31",
          "tasks": ["Production Migration", "Cost Optimization", "Full Platform Benefits"],
          "expected_savings": "24-32%"
        }
      ]
    }
  }
}
